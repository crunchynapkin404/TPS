# Generated by Django 5.0.14 on 2025-07-29 11:31

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_paid', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=True)),
                ('requires_manager_approval', models.BooleanField(default=True)),
                ('requires_hr_approval', models.BooleanField(default=False)),
                ('max_days_per_request', models.PositiveIntegerField(blank=True, help_text='Maximum days that can be requested at once', null=True)),
                ('max_days_per_year', models.PositiveIntegerField(blank=True, help_text='Maximum days per calendar year', null=True)),
                ('min_advance_notice_days', models.PositiveIntegerField(default=7, help_text='Minimum days advance notice required')),
                ('affects_shift_planning', models.BooleanField(default=True, help_text='Whether this leave type affects shift assignments')),
                ('color', models.CharField(default='#10B981', help_text='Color for calendar display', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'tps_leave_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RecurringLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Descriptive name for the pattern', max_length=100)),
                ('pattern_type', models.CharField(choices=[('weekly', 'Weekly'), ('bi_weekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('custom', 'Custom Pattern')], max_length=20)),
                ('start_date', models.DateField(help_text='When the pattern starts')),
                ('end_date', models.DateField(blank=True, help_text='When the pattern ends (null = indefinite)', null=True)),
                ('day_of_week', models.PositiveIntegerField(blank=True, help_text='Day of week (0=Monday, 6=Sunday) for weekly patterns', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('day_of_month', models.PositiveIntegerField(blank=True, help_text='Day of month for monthly patterns', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('interval_weeks', models.PositiveIntegerField(blank=True, help_text='Interval in weeks for custom patterns', null=True)),
                ('is_full_day', models.BooleanField(default=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('hours_per_occurrence', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('auto_create_requests', models.BooleanField(default=True, help_text='Automatically create leave requests for this pattern')),
                ('advance_creation_days', models.PositiveIntegerField(default=30, help_text='How many days in advance to create requests')),
                ('skip_holidays', models.BooleanField(default=True, help_text='Skip pattern occurrences on holidays')),
                ('is_active', models.BooleanField(default=True)),
                ('last_generated_date', models.DateField(blank=True, help_text='Last date for which requests were generated', null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_patterns', to='leave_management.leavetype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_leave_patterns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tps_recurring_leave',
                'ordering': ['user__last_name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('annual_allocation', models.DecimalField(decimal_places=2, default=0, help_text='Total days/hours allocated for the year', max_digits=6)),
                ('carried_forward', models.DecimalField(decimal_places=2, default=0, help_text='Days/hours carried forward from previous year', max_digits=6)),
                ('used', models.DecimalField(decimal_places=2, default=0, help_text='Days/hours used so far', max_digits=6)),
                ('pending', models.DecimalField(decimal_places=2, default=0, help_text='Days/hours in pending requests', max_digits=6)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_balances', to=settings.AUTH_USER_MODEL)),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balances', to='leave_management.leavetype')),
            ],
            options={
                'db_table': 'tps_leave_balances',
                'ordering': ['year', 'user__last_name'],
                'unique_together': {('user', 'leave_type', 'year')},
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('request_type', models.CharField(choices=[('full_day', 'Full Day'), ('partial_day', 'Partial Day'), ('hourly', 'Hourly')], default='full_day', max_length=12)),
                ('start_time', models.TimeField(blank=True, help_text='Start time for partial day requests', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='End time for partial day requests', null=True)),
                ('hours_requested', models.DecimalField(blank=True, decimal_places=2, help_text='Hours requested for hourly leave', max_digits=4, null=True)),
                ('reason', models.TextField(help_text='Reason for leave request')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('pending_manager', 'Pending Manager Approval'), ('pending_hr', 'Pending HR Approval'), ('approved', 'Approved'), ('declined', 'Declined'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('manager_reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('hr_reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('manager_notes', models.TextField(blank=True)),
                ('hr_notes', models.TextField(blank=True)),
                ('decline_reason', models.TextField(blank=True)),
                ('affects_critical_shifts', models.BooleanField(default=False, help_text='Leave affects critical shift coverage')),
                ('impact_notes', models.TextField(blank=True, help_text='Notes about planning impact')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hr_reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hr_leave_reviews', to=settings.AUTH_USER_MODEL)),
                ('manager_reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager_leave_reviews', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to=settings.AUTH_USER_MODEL)),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='leave_management.leavetype')),
                ('recurring_leave', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instances', to='leave_management.recurringleave')),
            ],
            options={
                'db_table': 'tps_leave_requests',
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['user', 'start_date'], name='tps_leave_r_user_id_efed07_idx'), models.Index(fields=['status', 'start_date'], name='tps_leave_r_status_d31d2f_idx'), models.Index(fields=['leave_type', 'start_date'], name='tps_leave_r_leave_t_c256eb_idx')],
            },
        ),
    ]
