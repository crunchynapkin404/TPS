# Generated by Django 5.0.14 on 2025-07-29 11:31

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('requires_action', models.BooleanField(default=False, help_text='Whether this notification requires user action')),
                ('auto_expire_hours', models.PositiveIntegerField(blank=True, help_text='Hours after which notification auto-expires', null=True)),
                ('send_email', models.BooleanField(default=False, help_text='Send email notifications')),
                ('send_realtime', models.BooleanField(default=True, help_text='Send real-time notifications')),
                ('send_sms', models.BooleanField(default=False, help_text='Send SMS notifications')),
                ('title_template', models.CharField(help_text='Template for notification title (supports variables)', max_length=200)),
                ('message_template', models.TextField(help_text='Template for notification message (supports variables)')),
                ('icon', models.CharField(default='bell', help_text='FontAwesome icon name', max_length=50)),
                ('color', models.CharField(default='#6B7280', help_text='Color for notification display', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'tps_notification_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('action_url', models.URLField(blank=True, help_text='URL for action button')),
                ('action_text', models.CharField(blank=True, help_text='Text for action button', max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('acknowledged', 'Acknowledged'), ('expired', 'Expired'), ('failed', 'Failed')], default='pending', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('related_assignment_id', models.UUIDField(blank=True, null=True)),
                ('related_leave_request_id', models.UUIDField(blank=True, null=True)),
                ('related_swap_request_id', models.UUIDField(blank=True, null=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('email_delivered', models.BooleanField(default=False)),
                ('sms_sent', models.BooleanField(default=False)),
                ('sms_delivered', models.BooleanField(default=False)),
                ('context_data', models.JSONField(default=dict, help_text='Additional context data for the notification')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications.notificationtype')),
            ],
            options={
                'db_table': 'tps_notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('retrying', 'Retrying')], default='queued', max_length=15)),
                ('scheduled_for', models.DateTimeField(default=django.utils.timezone.now, help_text='When to send the notification')),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('last_error', models.TextField(blank=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='queue_entry', to='notifications.notification')),
            ],
            options={
                'db_table': 'tps_notification_queue',
                'ordering': ['scheduled_for'],
                'indexes': [models.Index(fields=['status', 'scheduled_for'], name='tps_notific_status_3928f6_idx')],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('realtime_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_start_time', models.TimeField(blank=True, null=True)),
                ('quiet_end_time', models.TimeField(blank=True, null=True)),
                ('digest_enabled', models.BooleanField(default=False, help_text='Group similar notifications into digest')),
                ('digest_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='immediate', max_length=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_preferences', to='notifications.notificationtype')),
            ],
            options={
                'db_table': 'tps_notification_preferences',
                'unique_together': {('user', 'notification_type')},
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status'], name='tps_notific_recipie_67b589_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'created_at'], name='tps_notific_notific_977f2d_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['status', 'expires_at'], name='tps_notific_status_8f2c60_idx'),
        ),
    ]
