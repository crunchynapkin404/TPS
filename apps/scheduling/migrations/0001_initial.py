# Generated by Django 5.0.14 on 2025-07-29 11:31

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teams', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ShiftCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('WAAKDIENST', 'Waakdienst'), ('INCIDENT', 'Incident'), ('CHANGES', 'Changes'), ('PROJECTS', 'Projects'), ('OVERIG', 'Overig')], max_length=15, unique=True)),
                ('display_name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#6B7280', help_text='Hex color for UI display', max_length=7)),
                ('max_weeks_per_year', models.PositiveIntegerField(help_text='Maximum weeks per year for this category')),
                ('hours_per_week', models.DecimalField(decimal_places=2, help_text='Standard hours per week for this category', max_digits=5)),
                ('min_gap_days', models.PositiveIntegerField(help_text='Minimum days between assignments in this category')),
                ('requires_handover', models.BooleanField(default=False)),
                ('allows_auto_assignment', models.BooleanField(default=True)),
                ('priority_weight', models.PositiveIntegerField(default=1, help_text='Priority for automatic assignment (higher = more priority)')),
            ],
            options={
                'db_table': 'tps_shift_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PlanningPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('period_type', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('custom', 'Custom Period')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('planning_deadline', models.DateTimeField(help_text='Deadline for finalizing the planning')),
                ('publication_date', models.DateTimeField(blank=True, help_text='When the planning was published', null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('planning', 'In Planning'), ('review', 'Under Review'), ('approved', 'Approved'), ('published', 'Published'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('allows_auto_generation', models.BooleanField(default=True, help_text='Allow automatic shift generation for this period')),
                ('auto_generation_algorithm', models.CharField(choices=[('balanced', 'Balanced Distribution'), ('sequential', 'Sequential Rotation'), ('custom', 'Custom Algorithm')], default='balanced', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('planning_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_planning_periods', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_planning_periods', to=settings.AUTH_USER_MODEL)),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_planning_periods', to=settings.AUTH_USER_MODEL)),
                ('teams', models.ManyToManyField(blank=True, help_text='Teams included in this planning period', related_name='planning_periods', to='teams.team')),
            ],
            options={
                'db_table': 'tps_planning_periods',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ShiftTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('start_time', models.TimeField(help_text='Standard start time')),
                ('end_time', models.TimeField(help_text='Standard end time')),
                ('duration_hours', models.DecimalField(decimal_places=2, help_text='Total duration in hours', max_digits=5)),
                ('is_overnight', models.BooleanField(default=False, help_text='Shift spans multiple days')),
                ('is_weekly_shift', models.BooleanField(default=False, help_text='Week-long assignment')),
                ('spans_weekend', models.BooleanField(default=False, help_text='Includes weekend days')),
                ('days_of_week', models.JSONField(default=list, help_text='Array of weekday numbers (0=Monday, 6=Sunday)')),
                ('engineers_required', models.PositiveIntegerField(default=1)),
                ('backup_engineers', models.PositiveIntegerField(default=0)),
                ('required_skills', models.JSONField(default=list, help_text='Array of required skill IDs')),
                ('base_pay_multiplier', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=4)),
                ('weekend_pay_multiplier', models.DecimalField(decimal_places=2, default=Decimal('1.25'), max_digits=4)),
                ('night_pay_multiplier', models.DecimalField(decimal_places=2, default=Decimal('1.15'), max_digits=4)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shift_templates', to='scheduling.shiftcategory')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_shift_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tps_shift_templates',
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ShiftInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('date', models.DateField(help_text='Primary date for the shift')),
                ('start_datetime', models.DateTimeField(help_text='Actual start date/time')),
                ('end_datetime', models.DateTimeField(help_text='Actual end date/time')),
                ('actual_duration_hours', models.DecimalField(blank=True, decimal_places=2, help_text='Actual duration if different from template', max_digits=5, null=True)),
                ('location_override', models.CharField(blank=True, help_text='Location if different from template', max_length=200)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('published', 'Published'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled')], default='planned', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('is_emergency', models.BooleanField(default=False, help_text='Emergency or urgent shift')),
                ('requires_confirmation', models.BooleanField(default=True, help_text='Requires assignment confirmation')),
                ('auto_generated', models.BooleanField(default=False, help_text='Created by automatic planning')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_shifts', to=settings.AUTH_USER_MODEL)),
                ('planning_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shifts', to='scheduling.planningperiod')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='scheduling.shifttemplate')),
            ],
            options={
                'db_table': 'tps_shift_instances',
                'ordering': ['date', 'start_datetime'],
                'indexes': [models.Index(fields=['date', 'template'], name='tps_shift_i_date_e81bf8_idx'), models.Index(fields=['status', 'date'], name='tps_shift_i_status_21a6a1_idx'), models.Index(fields=['planning_period', 'date'], name='tps_shift_i_plannin_1c8208_idx')],
            },
        ),
    ]
